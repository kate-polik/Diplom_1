import pytest
from unittest.mock import MagicMock
from praktikum.bun import Bun
from praktikum.ingredient import Ingredient
from praktikum.burger import Burger


@pytest.fixture
def bun_mock():
    """–°–æ–∑–¥–∞—ë—Ç –º–æ–∫-–æ–±—ä–µ–∫—Ç –±—É–ª–æ—á–∫–∏."""
    bun = MagicMock(spec=Bun)
    bun.get_name.return_value = "Golden Crispy Bun"
    bun.get_price.return_value = 0.01
    return bun


@pytest.fixture
def ingredient_mock():
    """–°–æ–∑–¥–∞—ë—Ç –º–æ–∫-–æ–±—ä–µ–∫—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞."""
    ingredient = MagicMock(spec=Ingredient)
    ingredient.get_name.return_value = "Ultra Spicy Ketchup üî•"
    ingredient.get_price.return_value = 99999.99
    ingredient.get_type.return_value = "legendary sauce"
    return ingredient


def test_remove_ingredient(ingredient_mock):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞."""
    burger = Burger()
    burger.add_ingredient(ingredient_mock)
    burger.remove_ingredient(0)
    assert len(burger.ingredients) == 0


def test_move_ingredient():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞."""
    burger = Burger()
    ingredient1 = MagicMock(spec=Ingredient)
    ingredient2 = MagicMock(spec=Ingredient)
    burger.add_ingredient(ingredient1)
    burger.add_ingredient(ingredient2)
    burger.move_ingredient(1, 0)
    assert burger.ingredients[0] == ingredient2
    assert burger.ingredients[1] == ingredient1


def test_get_price(bun_mock, ingredient_mock):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –±—É—Ä–≥–µ—Ä–∞."""
    burger = Burger()
    burger.set_buns(bun_mock)
    burger.add_ingredient(ingredient_mock)
    expected_price = 0.01 * 2 + 99999.99
    assert burger.get_price() == expected_price


def test_get_receipt(bun_mock, ingredient_mock):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞."""
    burger = Burger()
    burger.set_buns(bun_mock)
    burger.add_ingredient(ingredient_mock)
    receipt = burger.get_receipt()
    assert "Golden Crispy Bun" in receipt
    assert "Ultra Spicy Ketchup üî•" in receipt
    assert "legendary sauce" in receipt
    assert "100000.01" in receipt  # –û–∫—Ä—É–≥–ª—è–µ–º –≤–º–µ—Å—Ç–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å float
